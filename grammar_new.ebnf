program    = function_gval*
function_gval = TYPE "*"* ident "(" (TYPE "*"* ident)* ")" "{" stmt* "}"
                | TYPE "*"* ident ("[" num "]")* "[]"?
                    ("=" ("{" (num ("," num)*)? "}") | num | string )? ";"
stmt = { stmt* }
        | TYPE "*"* ident ("[" num "]")* "[]"?
            ("=" ("{" (num ("," num))? "}") | num | string )? ";"
        | "return" expr ";"
        | "if" "(" expr ")" stmt ("else" stmt)?
        | "while" "(" expr ")" stmt
        | "for" "(" expr? ";" expr? ";" expr? ")" stmt
        | expr ";"
expr       = comma
comma      = assign ("," assign)*
assign     = condition (("=" | "+=" | "-=" | "*=" | "/="
            | "%=" | "&=" | "^=" | "|=" | "<<=" | ">>=") assign)?
condition  = logicOR ("?" condition ":" condition)? # TODO:これ合ってる?
logicOR    = logicAND ("||" logicAND)*
logicAND   = bitOR ("&&" bitOR)*
bitOR      = bitXOR ("|" bitXOR)*
bitXOR     = bitAND ("^" bitAND)*
bitAND     = equality ("&" equality)*
equality   = relational ("==" relational | "!=" relational)*
relational = shift (("<" | "<=" | ">" | ">=") shift)*
shift      = add ("<<" add | ">>" add)*
add        = mul ("+" mul | "-" mul)*
mul        = unary (("*" | "/" | "%") unary)*
unary      = ("sizeof" | "&" | "*" | ("(" TYPE ")")
                | "!" | "~" | "++" | "--") unary  # ++ -- は前置
            |  ("+" | "-")? brackets
postpos    = primary ("[" expr "]")*
            | primary ("++" | "--")  # ++ -- は後置
            | primary "." ident
            | primary "->" ident
# brackets   = primary ("[" expr "]")*
primary    = "(" expr ")" | string
            | ident "(" (expr ("," expr)*)? ")"
            | ident | num


# 「左から右」の評価 → assign ("," assign)*
# 「右から左」の評価 → condition ("=" assign)?

